// <auto-generated />
using System;
using ExpenditureTrackerWeb.Shared.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExpenditureTrackerWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250714201245_InitCreate")]
    partial class InitCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExpenditureTrackerWeb.Shared.Entities.Expense", b =>
                {
                    b.Property<int>("EX_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EX_Id"));

                    b.Property<decimal>("EX_Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EX_DateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EX_Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("EX_TransactionCategoryTC_Id")
                        .HasColumnType("int");

                    b.Property<int>("EX_UserU_Id")
                        .HasColumnType("int");

                    b.HasKey("EX_Id");

                    b.HasIndex("EX_TransactionCategoryTC_Id");

                    b.HasIndex("EX_UserU_Id");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("ExpenditureTrackerWeb.Shared.Entities.TransactionCategory", b =>
                {
                    b.Property<int>("TC_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TC_Id"));

                    b.Property<string>("TC_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TC_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("TC_TransactionTypeTT_Id")
                        .HasColumnType("int");

                    b.Property<int>("TC_UserU_Id")
                        .HasColumnType("int");

                    b.HasKey("TC_Id");

                    b.HasIndex("TC_TransactionTypeTT_Id");

                    b.HasIndex("TC_UserU_Id");

                    b.ToTable("TransactionCategories");
                });

            modelBuilder.Entity("ExpenditureTrackerWeb.Shared.Entities.TransactionType", b =>
                {
                    b.Property<int>("TT_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TT_Id"));

                    b.Property<string>("TT_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("TT_Id");

                    b.ToTable("TransactionTypes");

                    b.HasData(
                        new
                        {
                            TT_Id = 1,
                            TT_Name = "Income"
                        },
                        new
                        {
                            TT_Id = 2,
                            TT_Name = "Expenditure"
                        },
                        new
                        {
                            TT_Id = 3,
                            TT_Name = "Transfer"
                        },
                        new
                        {
                            TT_Id = 4,
                            TT_Name = "Investment"
                        },
                        new
                        {
                            TT_Id = 5,
                            TT_Name = "Loan"
                        },
                        new
                        {
                            TT_Id = 6,
                            TT_Name = "Refund"
                        },
                        new
                        {
                            TT_Id = 7,
                            TT_Name = "Other"
                        });
                });

            modelBuilder.Entity("ExpenditureTrackerWeb.Shared.Entities.User", b =>
                {
                    b.Property<int>("U_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("U_Id"));

                    b.Property<string>("U_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("U_FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("U_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("U_Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("U_Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ExpenditureTrackerWeb.Shared.Entities.Expense", b =>
                {
                    b.HasOne("ExpenditureTrackerWeb.Shared.Entities.TransactionCategory", "EX_TransactionCategory")
                        .WithMany("TC_Expenses")
                        .HasForeignKey("EX_TransactionCategoryTC_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpenditureTrackerWeb.Shared.Entities.User", "EX_User")
                        .WithMany("U_Expense")
                        .HasForeignKey("EX_UserU_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EX_TransactionCategory");

                    b.Navigation("EX_User");
                });

            modelBuilder.Entity("ExpenditureTrackerWeb.Shared.Entities.TransactionCategory", b =>
                {
                    b.HasOne("ExpenditureTrackerWeb.Shared.Entities.TransactionType", "TC_TransactionType")
                        .WithMany("TT_TransactionCategories")
                        .HasForeignKey("TC_TransactionTypeTT_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ExpenditureTrackerWeb.Shared.Entities.User", "TC_User")
                        .WithMany("U_TransactionCategories")
                        .HasForeignKey("TC_UserU_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TC_TransactionType");

                    b.Navigation("TC_User");
                });

            modelBuilder.Entity("ExpenditureTrackerWeb.Shared.Entities.TransactionCategory", b =>
                {
                    b.Navigation("TC_Expenses");
                });

            modelBuilder.Entity("ExpenditureTrackerWeb.Shared.Entities.TransactionType", b =>
                {
                    b.Navigation("TT_TransactionCategories");
                });

            modelBuilder.Entity("ExpenditureTrackerWeb.Shared.Entities.User", b =>
                {
                    b.Navigation("U_Expense");

                    b.Navigation("U_TransactionCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
